;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;; SurfaceTypeDefenitions ;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; You can define different surfacetype definitions here
; A surfacetype definition is defining which types of terrain exists, and how they should work ingame
; Each definition needs to have a default surface which will be used to place missing cliffs
; More precisely: If you define a non-visible cave where ground is, it will place this surface there.
;
; A definition also needs a roof. This roof will be places on every tile, which isnt visible yet.
; This roof will be defined as the coordinates on the texture atlas.
; The atlas textures are numbered in the following fashion: "NameXY.ext"
; "Name" is the name of the biome
; "ext" is the file extension
; "XY" is the coordinates of the texture on the atlas
; Meaning that in the default rock raiders, the roof is placed on an 8x8 (starting with (0,0) to (7,7)) grid with the coordinates (7,0)
; The same is true for all of the surface types textures. (Wall, Diagonal, InsideCorner, OutsideCorner, NConnect, XConnet, TConnect, LConnect, IConnect, EConnect)
;
; After that, every definition can have an unlimited amount of surface types.
; Every surface can get a tooltip and pointer defined.
; The tooltip consist of a text and a sound effect seperated by a comma (Text,EffectName)
; The text will be taken as it. The sound will be located in the Lego*/Samples node of the config.
; No tooltip value set here means no tooltip at all
; The Surfaces pointer is defined by the name of the pointer.
; It will be located in the Lego*/Pointers node of the config.
; No pointer will end in using the default pointer.
;
; Next up will be the value defeninitions. Each surface gets its "SURF", "PATH" and "DUGG" map value defined.
; If in doubt: These values are stored in the "Surf02.map" as example. These are then in the level folders.
; You can specify any value there, but normally the values are the same. This feature only exists if you want to add a lot of new surfaces.
;
; A surface needs to have the "AtRoofHeight" setting. This will indicate if it is a cliff, and usually at roof height, or a ground type like water, lava and cave floor.
; If it is set to true, you need to define the coordinates for the textures regarding the various cases of constalations:
; - Wall (two points next to each other are lowered to the ground)
; - Diagonal (two points diagonally opposite to each other are lowered to the ground)
; - InsideCorner (one point is lowered to the ground)
; - OutsideCorner (three points are lowered to the ground)
; If set to false there are cases in which you want to connect to other surfaces (like powerpaths)
; You can define these surfaces with "Connects" where you list the names of the surface (with the name used here, can also be cliff types) seperated by comma (with no spaces).
; After that you define the texture cases, these are only for directly touching neighbouring surfaces (no diagonal surfaces):
; - NConnect (No neighbouring surfaces to connect to)
; - XConnect (Neighbours on all four sides)
; - TConnect (Neighbours on three sides)
; - IConnect (two neighbours opposite to each other)
; - LConnect (remaining two neighbour cases)
; - EConnect (one neighbour)
; If you are unsure what texture coordinates are, refer to line 9
;
; For cliff surfaces (AtRoofHeight = TRUE) you can set the drilltime. More specifically:
; Every object can get drilltimes defined. These have custom names to them. You can specify the name for these times here.
; As example: A rock raider ("Pilot" in the config) will have a drilltime called "LooseDrillTime" These times can be asigned to the surface by using the name as
; "DrillTimeName" in the surface defenition (You can make custom ones aswell)


SurfaceTypeDefinitions {
	Standard {
		
		Roof						7,0
		DefaultSurface		SolidRock
		
		SolidRock {
			Pointer				Pointer_SurfaceType_Immovable
			ToolTip				Solid_Rock,SurfaceSFX_Immovable
			SurfaceValue		1
			AtRoofHeight		TRUE
			Wall					0,5
			Diagonal			7,7
			InsideCorner		3,5
			OutsideCorner		5,5
		}
		HardRock {
			DrillTimeName		HardDrillTime
			Pointer				Pointer_SurfaceType_Hard
			ToolTip				Hard_Rock,SurfaceSFX_Hard
			SurfaceValue		2
			AtRoofHeight		TRUE
			Wall					0,4
			Diagonal			7,7
			InsideCorner		3,4
			OutsideCorner		5,4
		}
		LooseRock {
			DrillTimeName		
			Pointer				Pointer_SurfaceType_Medium
			ToolTip				Loose_Rock,SurfaceSFX_Medium
			SurfaceValue		3
			AtRoofHeight		TRUE
			Wall					0,3
			Diagonal			7,7
			InsideCorner		3,3
			OutsideCorner		5,3
		}
		DirtRock {
			Pointer				Pointer_SurfaceType_Loose
			ToolTip				Dirt,SurfaceSFX_Loose
			SurfaceValue		4
			AtRoofHeight		TRUE
			Wall				0,2
			Diagonal			7,7
			InsideCorner		3,2
			OutsideCorner		5,2
		}
		OreSeam {
			Pointer				Pointer_SurfaceType_Loose
			ToolTip				Ore_Seam,SurfaceSFX_OreSeam
			SurfaceValue		8
			AtRoofHeight		TRUE
			Wall				4,0
		}
		CrystalSeam {
			Pointer				Pointer_SurfaceType_Loose
			ToolTip				Energy_Crystal_Seam,SurfaceSFX_CrystalSeam
			SurfaceValue		10
			AtRoofHeight		TRUE
			Wall				2,0
		}
		RechargeSeam {
			Pointer				Pointer_SurfaceType_Loose
			ToolTip				Energy_Crystal_Seam,SurfaceSFX_CrystalSeam
			SurfaceValue		11
			AtRoofHeight		TRUE
			Wall				6,7
		}
		DirtFloor {
			ToolTip				Dirt,SurfaceSFX_Loose
			SurfaceValue		5
			AtRoofHeight		FALSE
			NConnect			0,0
		}
		PowerPath {
			ToolTip				Power_Path,SurfaceSFX_Path
			SurfaceValue		5
			PathValue			2
			Connects			PowerPath,PowerPathPowered,Foundation,FoundationPowered
			AtRoofHeight		FALSE
			XConnect			6,0
			TConnect			6,4
			IConnect			6,2
			LConnect			6,3
			EConnect			6,5
			NConnect			6,5
		}
		PowerPathPowered {
			ToolTip				Power_Path,SurfaceSFX_Path
			SurfaceValue		5
			PathValue			3
			Connects			PowerPath,PowerPathPowered,Foundation,FoundationPowered
			AtRoofHeight		FALSE
			XConnect			6,0
			TConnect			6,4
			IConnect			6,2
			LConnect			6,3
			EConnect			6,5
			NConnect			6,5
		}
		Foundation {
			ToolTip				Power_Path,SurfaceSFX_Path
			SurfaceValue		5
			PathValue			4
			AtRoofHeight		FALSE
			NConnect			7,6
		}
		FoundationPowered {
			ToolTip				Power_Path,SurfaceSFX_Path
			SurfaceValue		5
			PathValue			5
			AtRoofHeight		FALSE
			NConnect			6,6
		}
		Rubble1 {
			ToolTip				Rubble,SurfaceSFX_Rubble
			SurfaceValue		5
			PathValue			1
			AtRoofHeight		FALSE
			NConnect			1,0
		}
		Rubble2 {
			ToolTip				Rubble,SurfaceSFX_Rubble
			SurfaceValue		5
			PathValue			6
			AtRoofHeight		FALSE
			NConnect			1,1
		}
		Rubble3 {
			ToolTip				Rubble,SurfaceSFX_Rubble
			SurfaceValue		5
			PathValue			6
			AtRoofHeight		FALSE
			NConnect			2,1
		}
		Rubble4 {
			ToolTip				Rubble,SurfaceSFX_Rubble
			SurfaceValue		5
			PathValue			6
			AtRoofHeight		FALSE
			NConnect			3,1
		}
		Lava {
			ToolTip				Lava,SurfaceSFX_Lava
			SurfaceValue		6
			AtRoofHeight		FALSE
			NConnect			4,6
		}
		Water {
			ToolTip				Water,SurfaceSFX_Water
			SurfaceValue		9
			AtRoofHeight		FALSE
			NConnect			4,5
		}
	}
}